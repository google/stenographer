#!/bin/bash
# Copyright 2014 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if ! which jq >/dev/null; then
  echo "Must install 'jq' for JSON parsing (apt-get install jq)"
  exit 1
fi

if [ "$#" -lt 1 ]; then
  cat 1>&2 <<EOF
$0 provides a simple method for reading logs out of stenographer.
Its first argument is the query to send to stenographer, all other arguments
are passed to TCPDump.

Examples:
 # Print all packets for source IP 1.1.1.1 without DNS resolution (-n).
 $0 ip=1.1.1.1 -n src ip 1.1.1.1
 # Print all PSH packets between 1.1.1.1 and 2.2.2.2:
 $0 'ip=1.1.1.1 ip=2.2.2.2' -n 'tcp[tcpflags] & tcp-push != 0'
 # Write all packets between 1.1.1.1 and 2.2.2.2 to disk.
 $0 'ip=1.1.1.1 ip=2.2.2.2' -w /tmp/out.pcap

See README.md for more details on the Stenographer query language.

Set the STENOGRAPHER_CONFIG environmental variable to point to your stenographer
config if it's in a nonstandard place (defaults to /etc/stenographer/config).
EOF
  exit 1
fi

STENOGRAPHER_CONFIG="${STENOGRAPHER_CONFIG-/etc/stenographer/config}"
PORT="$(cat "$STENOGRAPHER_CONFIG" | jq -r '.Port')"
CERTPATH="$(cat "$STENOGRAPHER_CONFIG" | jq -r '.CertPath')"
if [ -z "$PORT" -o -z "$CERTPATH" ]; then
  echo "Unable to get port ($PORT) or certpath ($CERTPATH) from config ($STENOGRAPHER_CONFIG)" 1>&2
  exit 1
fi
SERVER="localhost:$PORT"
STENOQUERY="$1"
shift
echo "PORT=$PORT"
echo "CERTPATH=$CERTPATH"

echo "Running stenotype query '$STENOQUERY' against '$SERVER'" 1>&2
curl \
    -d "$STENOQUERY" \
    --cert "$CERTPATH/client_cert.pem" \
    --key "$CERTPATH/client_key.pem" \
    --cacert "$CERTPATH/server_cert.pem" \
    --silent \
    --show-error \
    "https://$SERVER/" |
    tcpdump -r /dev/stdin -s 0 "$@"
